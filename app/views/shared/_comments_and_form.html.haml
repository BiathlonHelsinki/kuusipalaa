
- if user_signed_in?

  - if can?(:create, Comment) && commenting_open
    = content_for :jquery do
      :plain
        $('#ci_#{commentable.class.to_s}_#{commentable.id.to_s}').one('click', function() {

          $('#ci_#{commentable.class.to_s}_#{commentable.id.to_s}').mentionable("/users/mentions", {id: 'mi_#{commentable.class.to_s}_#{commentable.id.to_s}', position: 'flush'});
        });


    .row
      .small-12.columns.comment_form
        .user_comment_box
          .avatar{id: "avatar_comment_#{commentable.class.to_s}_#{commentable.id.to_s}"}
            = image_tag current_user.avatar.url(:thumb).gsub(/development/, 'production')

          .entry_wrapper
            - unless commentable.class == Pledge
              = semantic_form_for [ commentable,  Comment.new ], html: {id: "new_comment_" + commentable.id.to_s, onSubmit: "return getContent('" + commentable.class.to_s + '_' + commentable.id.to_s + "');", multipart: true, :"data-abide" => '' } do |f|
                = f.input :user_id, as: :hidden, input_html: {value: current_user.id}

                .comment_wrapper
                  = t :add_a_comment_to_this_discussion
                  .comment_input{id: "ci_#{commentable.class.to_s}_#{commentable.id.to_s}", contenteditable: true}

                = f.input :content, :label => false, input_html: {:required => '', class: :comment_input_textarea, id: "cit_#{commentable.class.to_s}_#{commentable.id.to_s}" }
                %small
                  %strong= t :tagging
                  %br/
                  = t :tagging_people
                  %br/
                  = t :tagging_events
                = f.input :image, :label => t(:attach_image_to_comment)
                = f.input :attachment, :label => t(:attach_attachment_to_comment)
                -# if current_user == commentable.primary_sponsor || current_user == commentable.secondary_sponsor
                -#  = f.input :frontpage, label: "Is this frontpage news?", hint: 'Tick this box and the comment will appear on Temporary\'s frontpage in the newsfeed.'
                - if @collection_options.size > 1

                  = f.hidden_field :contributor_type, value: 'User', 'required' => '', id: "comment_contributor_type_#{commentable.id.to_s}"
                  = f.hidden_field :contributor_id,  value: current_user.id, 'required' => '', id: "comment_contributor_id_#{commentable.id.to_s}"
                  = f.input :contributor, as: :select, input_html: {id: "comment_contributor_select_#{commentable.id.to_s}", class: :commenter_select}, label: t(:who_is_commenting), collection: options_for_select(@collection_options.map{|x| [x[0], x[1], { 'rel' => x[2], 'disabled'=> x[3], 'price' => x[4], 'vat' => x[5]}] }),  include_blank: false
                - else
                  = f.hidden_field :contributor_type, value: 'User', 'required' => ''
                  = f.hidden_field :contributor_id, value: current_user.id , 'required' => ''                    
                = f.submit t(:leave_comment), :class => [:button, :bordered]
  - if commenting_open
    = content_for :jquery do
      :plain
        $('form').on('submit', () => {

          $('textarea.is-invalid-input').parent('li').siblings('.comment_wrapper').find('.comment_input').css('border', '2px solid #f05e6b');
        });
        $('.commenter_select').on('change', function() {
          var thisone = $(this).attr('id')
         
          var num = thisone.replace(/^comment_contributor_select_/, '')



          $('#comment_contributor_type_' + num).val($('#' + thisone  + ' option').filter(":selected").attr('rel'));
          $('#comment_contributor_id_' + num).val($('#' + thisone).val());
          $.ajax({
            url: '/users/' + $('#comment_contributor_select_' + num).val() + '/get_avatar?class=' + $('#comment_contributor_type_' + num).val() + '&size=thumb',
            success: function(image) {

              $('#avatar_comment_#{commentable.class.to_s}_' + num + ' img').attr('src', image);
              $('#avatar_comment_#{commentable.class.to_s}_' + num + ' img').attr('alt', $('#comment_contributor_select_' + num + ' option').filter(":selected").html());
           
             }
            });
        }); 


- else
  .bottom_box= link_to t(:sign_in_to_comment), '/users/sign_in', class: [:button, :bordered]

