.home

  - unless @meetings.empty?
    - @meetings.each do |meeting|
      .row.expanded
        .small-12.medium-9.large-7.columns.medium-centered
          .meeting
            .heading= t :next_general_meeting
            .info_box
              .title= link_to meeting.name, meeting
              .date
                = l meeting.start_at, format: :short
                = " - "
                = meeting.end_at.strftime("%H:%M")
                %br/
                = "(Ex-)" + meeting.place.name + ", "
                = meeting.place.address1 + ", "
                = meeting.place.city
              .description
                = raw meeting.description
            .meta
              = pluralize(meeting.total_comment_count, t(:comment, count: meeting.total_comment_count))
              %span.light= "| "
              = pluralize(meeting.rsvps.size, t(:person, count: meeting.rsvps.size)) + t(:planning_to_attend)
              %span.light= " | "
              - if user_signed_in?
                = link_to "[" + t(:i_plan_to_attend) + "]", rsvp_meeting_path(meeting), method: :post
              - else
                = link_to t(:rsvp), '/users/sign_in'
  .row.expanded
    .small-12.columns
      %hr
  - unless @posts.empty?
    .row.expanded

      .small-12.columns.discussions
        .header.text-center= t :current_discussions

    .row.expanded.small-up-1.large-up-3.medium-up-2{:'data-equalizer' => 'second', :'data-equalize-by-row' => "true" }
      - @posts.each do |post|
        .column
          .post{:'data-equalizer-watch' => 'second'}
            .title= link_to post.title, post
            .blurb
              = raw truncate_html(post.body, length: 300)
            .meta
              = pluralize(post.total_comment_count, t(:comment, count: post.total_comment_count))
              %span.light= "| "
              = pluralize(post.notifications.size, t(:person, count: post.notifications.size)) + t(:watching)
      .column
        .add_post
          = link_to new_post_path do
            = fa_icon('plus')
            = t(:start_a_new_topic)
  = content_for :jquery do
    :plain
