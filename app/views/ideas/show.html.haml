%article.member_services_index.idea_detail_view
  .row
    .small-12.columns.lessright
      .lifted_box
        .title
          = t(:proposal) + ' : '
          = @idea.name
        - if @idea.converted?
          .has_enough.text-center
            .has_enough_banner= t :this_proposal_was_scheduled
            = link_to t(:please_see) + @idea.events.first.name, @idea.events.first
        - elsif @idea.has_enough?
          .has_enough.text-center
            .has_enough_banner= t :this_proposal_has_enough_points
            - if user_signed_in?
              - if @idea.proposers.include?(current_user)
                = link_to t(:publish_this_proposal), publish_event_idea_path(@idea), class: [:button, :bordered]
              - else
                %p= t :proposer_must_publish
        .blurb.proposal_review

          .tagline= @idea.short_description
          .byline= raw t(:proposed_by, who: link_to(@idea.proposer.display_name, @idea_proposer, target: :_blank), when: l(@idea.created_at, format: :long))

          - if @idea.image?
            .proposal_image= image_tag @idea.image.url(:medium)
           
          = render partial: "ideas/#{@idea.ideatype.slug}"
          .points_stats
            %strong= t(:points_required_for_this_event)
            = @idea.points_needed

        - unless @idea.ideatype == KuusiPalaa::Ideas::Request || @idea.converted?
          .pledge_box
            .pledge_heading
              .row
                .small-6.columns= t(:still_needed, amount: @idea.points_still_needed)
                .small-6.columns.pledge_list
                  - unless @idea.pledges.select(&:persisted?).empty?
                    %em= t :pledges_from
                    = raw @idea.pledges.select(&:persisted?).map{|x| [link_to(x.user.display_name, x.user, target: :_blank), "(#{x.pledge})"].join(' ')}.join(', ')
              - if user_signed_in?  
                .row
                  .small-12.columns
                    = t(:you_can_pledge_a_max_of_x, max: @idea.max_for_user(current_user, @pledge))
            - if user_signed_in?         
              .row
                .small-12.medium-8.columns
                  .slider{"data-initial-start" => "#{@pledge.new_record? ? 0 : @pledge.pledge}", "data-start" => "0", "data-end" => "#{@idea.max_for_user(current_user, @pledge)}", "data-slider" => ""}
                    %span.slider-handle{"aria-controls" => "pledge_pledge", "data-slider-handle" => "", :role => "slider", :tabindex => "1"}
                    %span.slider-fill{"data-slider-fill" => ""}
                .small-12.medium-4.columns
                  = semantic_form_for [@idea, @pledge], html: {:"data-abide" => '' } do |f|
                    = f.input :pledge, label: false
                    -if @pledge.new_record?
                      = f.submit t(:pledge_verb), class: [:bordered, :button]
                    - else
                      = f.submit t(:change_pledge), class: [:bordered, :button]
        #comments_list

          .comments_title= t :discussion
          - if @idea.discussion.size > 0
            .small-12.columns
              .comment_count
                = t(:this_proposal_has_x_comments_x_pledges, count: @idea.comments.select(&:persisted?).size, comments: t(:comment, count: @idea.comments.select(&:persisted?).size), pledge_count: @idea.pledges.select(&:persisted?).size, pledges: t(:pledge, count: @idea.pledges.select(&:persisted?).size), pledged: @idea.pledged.to_s)



          %ul.first= render(partial: 'shared/comment', collection: @idea.discussion.select(&:persisted?).sort_by(&:created_at), locals: {depth: 0, root: @idea, last: @idea.comments.last, commenting_open: !@idea.converted?})
          #main_thread= render partial: 'shared/comments_and_form', locals: {commentable: @idea, depth: 0, commenting_open: !@idea.converted?}
        - if @idea.converted?
          .bottom_box= t :proposal_is_closed
= content_for :jquery do
  :plain
    $('.comment_content').readmore({lessLink: '<a class="button readmore" href="#">[#{t(:close)}]</a>', moreLink: '<a class="button readmore" href="#">[#{t(:read_more)}]</a>'});
     