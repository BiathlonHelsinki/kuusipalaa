!!! 5
%html{ :lang => "en"}
  %head
    %meta{ :charset => "utf-8" }
    %meta{name: 'referrer', content: 'origin-when-cross-origin'}
    %meta{ :name => "viewport", :content => "width=device-width, initial-scale=1.0" }
    -# %link{:href => "https://fonts.googleapis.com/css?family=Source+Code+Pro", :rel => "stylesheet"}/
    %title= content_for?(:title) ? yield(:title) : "Kuusi Palaa"
    %link{:href => "/icons/apple-touch-icon.png", :rel => "apple-touch-icon", :sizes => "180x180"}/
    %link{:href => "/icons/favicon-32x32.png", :rel => "icon", :sizes => "32x32", :type => "image/png"}/
    %link{:href => "/icons/favicon-16x16.png", :rel => "icon", :sizes => "16x16", :type => "image/png"}/
    %link{:href => "/icons/manifest.json", :rel => "manifest"}/
    %link{:color => "#5bbad5", :href => "/icons/safari-pinned-tab.svg", :rel => "mask-icon"}/
    %meta{:content => "#ffffff", :name => "theme-color"}/
    = javascript_include_tag "application"
    = stylesheet_link_tag "application"
    = csrf_meta_tag
    -#= render partial: 'layouts/piwik'
  %body.frontpage
    - if flash.empty?
      - unless Meeting.upcoming.empty?
        .alert.alert-notice.text-center
          = link_to Meeting.upcoming.first do
            = t(:come_and_visit) 
            = Meeting.upcoming.first.name
            = " / "
            = l Meeting.upcoming.first.start_at, format: :short      
    - else
      - flash.each do |key, value|
        .alert.text-center{ :class => "alert-#{key}" }
          %strong= raw value
  


    %header
      .row
        .small-12.columns.icons.text-right
          = link_to fa_icon('envelope'), "mailto:info at kuusipalaa.fi"
          = link_to fa_icon('twitter'), 'https://twitter.com/search?q=%23KuusiPalaa&src=typd'
          = link_to fa_icon('facebook'), 'https://www.facebook.com/groups/375784559552164/'
          |
          - if I18n.locale.to_s != 'fi'
            = link_to 'FIN', :controller => controller.controller_name, :action => controller.action_name, :id => params[:id], :locale => 'fi'
          - else
            FIN

          - if I18n.locale.to_s != 'en'
            = link_to 'ENG', :controller => controller.controller_name, :action => controller.action_name, :id => params[:id], :locale => 'en'
          - else
            ENG
      .row

        .top-bar.small-12.columns.lessmargins
          .top-bar-left
            .tagline= t :a_decentralised_cultural_venue_in_helsinki
          .top-bar-right.user_menu
            - if user_signed_in?
              = render partial: 'shared/user_top_menu'


            - else
              .buttons
                = link_to t(:sign_in), '/users/sign_in'
                = render partial: 'shared/generic_menu'
            %br{clear: :all}
    - if user_signed_in?
      - if @refund_pending
        %article.pending
          .row
            .small-12.columns.title.text-center
              .attention= t :kuusi_palaa_is_dissolving
              %p= t :your_refund_details
              - if current_user.stakes.paid.map(&:season_id).uniq.flatten.include?(2)
                %p= t :season_2_stakeholder_refund
              = link_to t(:enter_bank_details), user_stakeholder_refund_path(current_user)
    - unless @kuusipalaa_pending.empty?
      %article.pending
        .row
          .small-12.columns.title.text-center
            .attention= t :requires_your_attention
            - @kuusipalaa_pending.each do |pending|
              %li
                = link_to pending.last do
                  = "'#{pending.last.name}'"
                  = t pending.first
    - if @show_idcard_info
      %article#idcard_info

        .row
          .close_box= link_to fa_icon('times'), '/clear_idcard_info', method: :post, remote: true
          .front_box.notice.closeable        
            .small-12.columns.small-centered.text-center
              .smaller= t :do_you_want_an_id_card
              .smaller= link_to t(:how_do_i_do_this), page_path('how-to-get-a-kuusi-palaa-id-card')

    %article.headline
      .row
        .small-12.columns.title{class: @kp_is_open.to_s}
          #kp_headline.text-center KUUSI PALAA
          
          .banner_blurb
            - if @kp_is_open
              = link_to event_instance_path('kuusi-palaa', 'kuusi-palaa-season-1') do
                = t :is_currently_open
              = t :all_are_welcome
            - else
              = link_to event_instance_path('kuusi-palaa', 'kuusi-palaa-season-1') do
                = t :is_currently_closed
              = raw t(:not_a_stakeholder_come_some_other_time, calendar_link: link_to(t(:calendar).downcase, calendar_events_path))

    - unless user_signed_in?
      %article
        .row.front_box.promo_image
          .small-12.columns.small-centered.text-center
            .banner_blurb= t :will_be_collectively_operated

    - unless @sticky.empty?
      - @sticky.each do |sticky|
        - next unless sticky.slug =~ /deadline-for-funding-season/
        %article
          .row.front_box
            = link_to sticky, target: :_blank do
              .small-12.columns.small-centered.text-center
                .banner_blurb
                  = sticky.name
                .smaller= raw sticky.body.split(/\r/)[0..2].join rescue sticky.body

            .small-12.columns.medium-6
              - if user_signed_in? && current_user&.is_stakeholder?
                = link_to new_season_stake_path(@next_season) do
                  .front_button.text-center
                    = t :buy_another_stake
              - else
                = link_to (user_signed_in? ? new_season_stake_path(@next_season) : '/users/sign_in') do
                  .front_button.text-center
                    = t(:join_cooperative)
            .small-12.columns.medium-6
              - if user_signed_in? && current_user&.is_stakeholder?
                = link_to season_budgetproposals_path(@next_season)  do
                  .front_button.text-center
                    = t :budget_proposals_for_season_x, season: @next_season.number
              - else
                = link_to page_path('questions-and-answers') do
                  .front_button.text-center
                    = t(:more_info)               


    - else
      - if @needs_pin
        %article
          .row.front_box.alert
            = link_to set_pin_user_path(current_user) do
              .small-12.columns.small-centered.text-center
                .banner_blurb= t :you_must_enter_a_pin
                .smaller= t :enter_pin_for_id

    -# %article
    -#   .row.front_box
    -#     .small-12.columns.small-centered.text-center
    -#       = link_to new_season_stake_path(@next_season) do
    -#         .banner_blurb
    -#           = t :upcoming_season_front_box, number: @next_season.number.to_s, range: date_range(@next_season.start_at, @next_season.end_at)  

    -# %article
    -#   .row#progress_bar
    -#     .progress{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" =>  ((@next_season.stakes.paid.sum{|x| x.amount * x.price} - @current_season.stakes.booked_unpaid.sum{|x| x.amount * x.price}).to_f / 6000.to_f * 100), "aria-valuetext" =>  sprintf("%0.2f", (((@next_season.stakes.paid.sum{|x| x.amount * x.price} - @current_season.stakes.booked_unpaid.sum{|x| x.amount * x.price}).to_f / 6000.to_f * 100))) + " percent", :role => "progressbar", :tabindex => "0"}

    -#   .progress-meter{:style => "width: #{[(((@next_season.stakes.paid.sum{|x| x.amount * x.price}.to_f - @current_season.stakes.booked_unpaid.sum{|x| x.amount * x.price}.to_f) /6000.to_f)*100), 100].min}%;"}
    -# .row
    -#   .small-12.columns.text-center
    -#     %p.progress-meterbar-text.text-center
    -#       = t(:so_far_next_season, has: @next_season.stakes.paid.sum{|x| x.amount * x.price}.to_i - @current_season.stakes.booked_unpaid.sum{|x| x.amount * x.price}.to_i, needs: @next_season.amount_needed, paid_stakes: @next_season.stakes.paid.sum(&:amount) - @current_season.stakes.booked_unpaid.sum(&:amount), needed_stakes: "~" + @next_season.stake_count.to_s)
    -#       .smaller
    -#         %small= t :next_season_asterisk
    -#= raw t(:euros_out_of_total, amount: @next_season.stakes.paid.sum{|x| x.amount * x.price}.to_i - @current_season.stakes.booked_unpaid.sum{|x| x.amount * x.price}.to_i, total: 5000) + '! Kiitos!'

      -# %article
      -#   .row.stats_boxes{:'data-equalizer' => '', :'data-equalize-on' => "medium", id: :stats_boxes}
      -#     .small-12.medium-4
      -#       .box{:'data-equalizer-watch' => ''}
      -#         = link_to new_season_stake_path(@next_season)  do 
      -#           .big_num= @next_season.stakes.paid.sum{|x| x.amount }.to_i - @current_season.stakes.booked_unpaid.sum{|x| x.amount }.to_i
      -#           .info
      -#             = t :out_of_x_for_season, x: "~" + @next_season.stake_count.to_s, season_num: @next_season.number.to_s
      -#             = t :each_stake_costs_50

      -#     .small-12.last.medium-4
      -#       .box{:'data-equalizer-watch' => ''}
      -#         = link_to  new_season_stake_path(@current_season.complete? ? @next_season : @current_season)  do
      -#           .big_num= Stake.paid.map(&:owner).uniq.count
      -#           .info
      -#             = t :x_members_of_cooperative
      -#             %br/
      -#             - unless user_signed_in? && current_user&.is_stakeholder?
      -#               =  t(:join_cooperative) + "!"
      -# .small-12.medium-4
      -#     .box{:'data-equalizer-watch' => ''}
      -#        = link_to '/events/calendar' do 
      -#        .big_num= @event_count.to_s
      -#        .info
      -#          %strong= t :events_today, event: t(:event, count: @event_count)
      -#      .info
      -#        %br/
      -#        - if @main_room.empty?
      -#          = link_to  t(:main_room_free_all_day), event_instance_path('kuusi-palaa', uusi-palaa-season-1')
      -#         - else
      -#           = t :main_room_events_from, event: @main_room.size.to_s + ' '  + t(:event, count: @main_room.size)
      -#            = @main_room.order(:start_at).map{|rb| [rb.start_at.strftime("%H:%M") + ' - ' + rb.end_at.strftime("%H:%M")]}.join('; ')
      -#            - if @main_room.map(&:allow_others).include?(true)
      -#              %br/
      -#              = t :allow_others_explanation                    
      -# %article#stakeholder_banner
      -#   .row
      -#     .small-12.columns.lessmargins.right_adjust
      -#       = link_to new_idea_path do
      -#         .front_button.text-center
      -#           = t(:organise_an_event)

      -#   %article
      -#     .small-12.medium-6.large-4.columns.left_adjust
      -#       .lifted_box.invert{:'data-equalizer-watch' => ''}
      -#         .banner2_title= t :season_1_funded
      -#         .banner2_blurb
      -#           %p= t :enough_stakes_for_season_1
      -#           %p= t :stakes_for_season_2

                  


        -# .row
        -#   .small-12.medium-6.columns.lessmargins
        -#     = link_to new_season_stake_path(@current_season.complete? ? @next_season : @current_season) do
        -#       .front_button.text-center
        -#         = t(:buy_a_stake)

        -#   .small-12.medium-6.columns.lessright
        -#     = link_to page_path('questions-and-answers') do
        -#       .front_button.text-center
        -#         =  t(:more_info)
        -# %article
        -#   .row.front_box
        -#     .small-12.columns.text-center
        -#       = t :a_stake_is
        -#       .smaller= t :a_stake_is_longer

    -# - unless user_signed_in? && current_user&.is_stakeholder?
    -#   %article#stakeholder_banner
    -#     .row
    -#       .small-12.columns.lessmargins.right_adjust
    -#         = link_to new_season_stake_path(@next_season) do
    -#           .front_button.text-center
    -#             = t(:support_kp_and_become_stakeholder)
    -#   %article
    -#     .row.front_box
    -#       .small-12.columns.small-centered.text-center
    -#         .banner_blurb= t :as_a_stakeholder
    -#     .row{:'data-equalizer' => '', :'data-equalize-on' => "medium"}
    -#       .small-12.medium-4.columns.left_adjust
    -#         .lifted_box{:'data-equalizer-watch' => ''}
    -#           .banner2_title= t :everyone_creates_and_produces
    -#           .banner2_blurb= t :everyone_creates_blurb
    -#       .small-12.medium-4.columns
    -#         .lifted_box{:'data-equalizer-watch' => ''}
    -#           .banner2_title= t :participation_rules
    -#           .banner2_blurb= t :participation_front_blurb
    -#       .small-12.medium-4.columns.right_adjust
    -#         .lifted_box{:'data-equalizer-watch' => ''}
    -#           .banner2_title= t :the_door_is_always_open
    -#           .banner2_blurb= t :door_open_blurb


    -# %article
    -#   .row.stats_boxes{:'data-equalizer' => '', :'data-equalize-on' => "medium", id: :stats_boxes}
    -#     .small-12.medium-4
    -#       .box{:'data-equalizer-watch' => ''}
    -#         = link_to activities_path do 
    -#           .big_num= @visitors_so_far.to_s
    -#           .info
    -#             %strong= t :visitors_so_far
    -#             %br/
    -#             - unless @back_room.empty?
    -#               = t :back_room_booked_from
    -#               = @back_room.map{|rb| [rb.start_at.strftime("%H:%M") + ' - ' + rb.end_at.strftime("%H:%M")]}.join('; ')
    -#               %br/
    -#             = link_to t(:you_can_always_book_the_back_room) + '!', '/roombookings'                
    -#             - if @event_count == 0
    -#               %br/
    -#               = t :kp_for_general_use

    - unless @sticky.empty?
      - @sticky.each do |sticky|
        - next if sticky.slug =~ /deadline-for-funding/
        %article
          .row.front_box
            = link_to sticky, target: :_blank do
              .small-12.columns.small-centered.text-center
                .banner_blurb
                  = sticky.name
                .smaller= raw sticky.body

    %article
      .row.front_box
        .small-12.columns.small-centered.text-center
          .banner_blurb
            = t :season_x, number: @current_season.number
            = ": "
            = date_range(@current_season.start_at, @current_season.end_at, format: :long)                
    .row.article_slider{:'data-equalizer' => '', :'data-equalize-on' => "medium"}
      .columns.small-12.medium-6.large-4.left_adjust
        = link_to '/announcements/this_week' do
          .lifted_box.feed{:'data-equalizer-watch' => ''}
            .banner2_title
              = t :this_week_at_kuusi_palaa
            .banner2_blurb
              = t :email_disclaimer
              = t :visit_kuusi_palaa_email
              = "..."
      - @feed.shuffle.each do |feeditem|
        .columns.small-12.medium-6.large-4.left_adjust
          = link_to feeditem.class == Instance ? event_path(feeditem.event) : feeditem  do
            .lifted_box.feed{:'data-equalizer-watch' => '', style: feeditem.event_image? ?  "background: url(#{feeditem.event_image.url(:box).gsub(/development/, 'production')}) no-repeat center top; background-size: cover;" : "background: url('/assets/kp_front_jazz.jpg') #{cycle("left", "center", "right")} top;"}
              .banner2_title
                = t feeditem.class.to_s.downcase.to_sym, count: 1
                = ": "
                - if feeditem.class == Instance
                  = feeditem.get_sequence_name
                - else
                  = feeditem.name
                - if feeditem.class == Idea
                  .description= raw feeditem.short_description
                  .proposed_by_front
                    = t :proposed_by_person, link: feeditem.proposer.display_name
                    - if feeditem.timeslot_undetermined != true
                      = t :proposed_for, when: l(feeditem.start_at.to_date, format: :short)
                    - if feeditem.points_still_needed > 0
                      = raw "&mdash;"
                      = t :still_needed, amount: feeditem.points_still_needed.to_s + 'ᵽ'
                    - else
                      %br/
                      = t :points_funded_waiting
                - elsif feeditem.class == Instance
                  .description
                    - feeditem.event.instances.where(sequence: feeditem.sequence).order(:start_at).each do |instance|
                      - next unless instance.in_future?
                      = date_range(instance.start_at, instance.end_at)
                      %br/
              .banner2_blurb  
                .overlay
                  = raw truncate_html(simple_format(feeditem.description), length: 350)

 

      .small-12.medium-6.large-4.columns.left_adjust
        = link_to new_idea_path do
          .lifted_box.invert{:'data-equalizer-watch' => ''}
            .banner2_title= t :organise_an_event
            .banner2_blurb
              = t :organise_event_front
    = yield
    



    



    -# %article#stakeholder_banner
    -#   .row
    -#     .small-12.columns.lessmargins.right_adjust
    -#       = link_to new_season_stake_path(@current_season) do
    -#         .front_button.text-center
    -#           = t(:become_a_stakeholder)



    = render 'cookies_eu/consent_banner'
    = render partial: 'shared/footer'
    :javascript
      $(document).ready(function() {
        $("#kp_headline").fitText(0.7);
        $('.article_slider').slick({
          responsive: [
            {
            breakpoint: 1024,
            settings: {
              slidesToShow: 3,
              slidesToScroll: 3,
              infinite: true,
              dots: true
            }
            },
            {
            breakpoint: 600,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 2
              }
            },
              {
                breakpoint: 480,
                settings: {
                  slidesToShow: 1,
                  slidesToScroll: 1
                }
              } 
            ],
            infinite: true,
            slidesToShow: 3,
            slidesToScroll: 1,  
            autoplay: true,
            autoplaySpeed: 3000
        })

        #{yield :jquery}
      })