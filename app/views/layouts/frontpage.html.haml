!!! 5
%html{ :lang => "en"}
  %head
    %meta{ :charset => "utf-8" }

    %meta{ :name => "viewport", :content => "width=device-width, initial-scale=1.0" }
    %link{:href => "https://fonts.googleapis.com/css?family=Montserrat|Source+Code+Pro", :rel => "stylesheet"}/
    %title= content_for?(:title) ? yield(:title) : "Kuusi Palaa"
    %link{:href => "/icons/apple-touch-icon.png", :rel => "apple-touch-icon", :sizes => "180x180"}/
    %link{:href => "/icons/favicon-32x32.png", :rel => "icon", :sizes => "32x32", :type => "image/png"}/
    %link{:href => "/icons/favicon-16x16.png", :rel => "icon", :sizes => "16x16", :type => "image/png"}/
    %link{:href => "/icons/manifest.json", :rel => "manifest"}/
    %link{:color => "#5bbad5", :href => "/icons/safari-pinned-tab.svg", :rel => "mask-icon"}/
    %meta{:content => "#ffffff", :name => "theme-color"}/
    = javascript_include_tag "application"
    = stylesheet_link_tag "application"
    = csrf_meta_tag
    = render partial: 'layouts/piwik'
  %body.frontpage
    - if flash.empty?
      - unless Meeting.upcoming.empty?
        .alert.alert-notice.text-center
          = link_to Meeting.upcoming.first do
            = t(:come_and_visit) 
            = Meeting.upcoming.first.name
            = " / "
            = l Meeting.upcoming.first.start_at, format: :short      
    - else
      - flash.each do |key, value|
        .alert.text-center{ :class => "alert-#{key}" }
          %strong= raw value
  


    %header
      .row
        .small-12.columns.icons.text-right
          = link_to fa_icon('envelope'), "mailto:admin at temporary.fi"
          = link_to fa_icon('twitter'), 'https://twitter.com/search?q=%23KuusiPalaa&src=typd'
          = link_to fa_icon('facebook'), 'https://www.facebook.com/groups/375784559552164/'
          |
          - if I18n.locale.to_s != 'fi'
            = link_to 'FIN', :controller => controller.controller_name, :action => controller.action_name, :id => params[:id], :locale => 'fi'
          - else
            FIN

          - if I18n.locale.to_s != 'en'
            = link_to 'ENG', :controller => controller.controller_name, :action => controller.action_name, :id => params[:id], :locale => 'en'
          - else
            ENG
      .row

        .top-bar.small-12.columns.lessmargins
          .top-bar-left
            .tagline= t :a_decentralised_cultural_venue_in_helsinki
          .top-bar-right.user_menu
            - if user_signed_in?
              = render partial: 'shared/user_top_menu'


            - else
              .buttons= link_to t(:sign_in), '/users/sign_in'
            %br{clear: :all}
    - unless @kuusipalaa_pending.empty?
      %article.pending
        .row
          .small-12.columns.title.text-center
            .attention= t :requires_your_attention
            - @kuusipalaa_pending.each do |pending|
              %li
                = link_to pending.last do
                  = "'#{pending.last.name}'"
                  = t pending.first
    %article.headline
      .row
        .small-12.columns.title
          #kp_headline.text-center KUUSI PALAA

    - unless user_signed_in?
      %article
        .row.front_box
          .small-12.columns.small-centered.text-center
            .banner_blurb= t :will_be_collectively_operated
            .row
              .small-12.columns.medium-6
                = link_to '/users/sign_in' do
                  .front_button.text-center
                    = t(:log_in_join)
              .small-12.columns.medium-6
                = link_to page_path('questions-and-answers') do
                  .front_button.text-center
                    = t(:more_info)               

      %article
        .row
          .front_images= image_tag 'kp_front_jazz.jpg'

    - else
      - if @needs_pin
        %article
          .row.front_box.alert
            = link_to set_pin_user_path(current_user) do
              .small-12.columns.small-centered.text-center
                .banner_blurb= t :you_must_enter_a_pin
                .smaller= t :enter_pin_for_id

    %article
      .row.front_box{class: @kp_is_open.to_s}
        .small-12.columns.small-centered.text-center
          .banner_blurb
            - if @kp_is_open
              = t :kp_is_currently_open
              .smaller= t :all_are_welcome
            - else
              = t :kp_is_currently_closed
              .smaller= t :not_a_stakeholder_come_some_other_time

    %article
      .row.stats_boxes{:'data-equalizer' => '', :'data-equalize-on' => "medium", id: :stats_boxes}
        .small-12.medium-4
          .box{:'data-equalizer-watch' => ''}
            .big_num= @visitors_so_far.to_s
            .info
              %strong= t :visitors_so_far


        .small-12.medium-4
          .box{:'data-equalizer-watch' => ''}
            .big_num= @event_count.to_s
            .info
              %strong= t :events_today, event: t(:event, count: @event_count)
              %br/
              - unless @back_room.empty?
                = t :back_room_booked_from
                = @back_room.map{|rb| [rb.start_at.strftime("%H:%M") + ' - ' + rb.end_at.strftime("%H:%M")]}.join('; ')

              %br/
              - if @main_room.empty?
                = t :main_room_free_all_day
              - else
                = t :main_room_events_from, event: @main_room.to_s + ' '  + t(:event, count: @main_room)
              - if @event_count == 0
                = t :kp_for_general_use

        .small-last.medium-4
          .box{:'data-equalizer-watch' => ''}
            .big_num= Stake.all.map(&:owner).to_a.reject{|x| !x.accepted_agreement}.count
            .info
              %strong= t :x_members_of_cooperative
              %br/
              %br/
              = link_to t(:get_your_stake), new_season_stake_path(@current_season.complete? ? @next_season : @current_season) 
    %article.divider
      .row
        .small-12.columns &nbsp;

    %article
      .row.front_box
        .small-12.columns.small-centered.text-center
          .banner_blurb
            = t :season_x, number: @current_season.number
            = ": "
            = date_range(@current_season.start_at, @current_season.end_at, format: :long)
    
    .row.article_slider
      - @feed.shuffle.each do |feeditem|
        .columns.small-12.medium-6.large-4.left_adjust
          = link_to feeditem.class == Instance ? event_path(feeditem.event) : feeditem  do
            .lifted_box.feed{:'data-equalizer-watch' => '', style: feeditem.image? ?  "background: url(#{feeditem.image.url(:box)}) no-repeat center top;" : false}
              .banner2_title
                = t feeditem.class.to_s.downcase.to_sym, count: 1
                = feeditem.name
                - if feeditem.class == Idea
                  .description= raw feeditem.short_description
                - elsif feeditem.class == Event
                  .description
                    - feeditem.instances.order(:start_at).each do |instance|
                      - next unless instance.in_future?
                      = date_range(instance.start_at, instance.end_at)
                      %br/
              .banner2_blurb  
                - if feeditem.image?
                  &nbsp;
                - else
                  = raw truncate_html(feeditem.description, length: 250)

    .row{:'data-equalizer' => '', :'data-equalize-on' => "medium"}
      %article
        .small-12.medium-6.large-4.columns.left_adjust
          = link_to new_idea_path do
            .lifted_box.invert{:'data-equalizer-watch' => ''}
              .banner2_title= t :organise_an_event
              .banner2_blurb
                = t :organise_event_front

    %article#stakeholder_banner
      .row
        .small-12.columns.lessmargins.right_adjust
          = link_to new_idea_path do
            .front_button.text-center
              = t(:organise_an_event)

    -#   %article
    -#     .small-12.medium-6.large-4.columns.left_adjust
    -#       .lifted_box.invert{:'data-equalizer-watch' => ''}
    -#         .banner2_title= t :season_1_funded
    -#         .banner2_blurb
    -#           %p= t :enough_stakes_for_season_1
    -#           %p= t :stakes_for_season_2

              


    -# .row
    -#   .small-12.medium-6.columns.lessmargins
    -#     = link_to new_season_stake_path(@current_season.complete? ? @next_season : @current_season) do
    -#       .front_button.text-center
    -#         = t(:buy_a_stake)

    -#   .small-12.medium-6.columns.lessright
    -#     = link_to page_path('questions-and-answers') do
    -#       .front_button.text-center
    -#         =  t(:more_info)
    -# %article
    -#   .row.front_box
    -#     .small-12.columns.text-center
    -#       = t :a_stake_is
    -#       .smaller= t :a_stake_is_longer

    -# %article
    -#   .row#progress_bar
    -#     -# .progress{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "#{@current_season.stakes.paid.sum(&:amount)}", "aria-valuetext" => "#{@current_season.stakes.sum(&:amount)} percent", :role => "progressbar", :tabindex => "0"}
    -#     -#   .progress-meter{:style => "width: #{[((@current_season.stakes.paid.sum{|x| x.amount * x.price}/5000)*100), 100].min}%;"}
    -#     -# .row
    -#     .small-12.columns.text-center
    -#       %p.progress-meterbar-text.text-center= raw t(:euros_out_of_total, amount: @current_season.stakes.paid.sum{|x| x.amount * x.price}.to_i, total: 5000) + '! Kiitos!'


    

    -# %article
    -#   .row.front_box
    -#     .small-12.columns.small-centered.text-center
    -#       .banner_blurb= t :as_a_stakeholder
    -#   .row{:'data-equalizer' => '', :'data-equalize-on' => "medium"}
    -#     .small-12.medium-4.columns.left_adjust
    -#       .lifted_box{:'data-equalizer-watch' => ''}
    -#         .banner2_title= t :everyone_creates_and_produces
    -#         .banner2_blurb= t :everyone_creates_blurb
    -#     .small-12.medium-4.columns
    -#       .lifted_box{:'data-equalizer-watch' => ''}
    -#         .banner2_title= t :participation_rules
    -#         .banner2_blurb= t :participation_front_blurb
    -#     .small-12.medium-4.columns.right_adjust
    -#       .lifted_box{:'data-equalizer-watch' => ''}
    -#         .banner2_title= t :the_door_is_always_open
    -#         .banner2_blurb= t :door_open_blurb

    -# %article#stakeholder_banner
    -#   .row
    -#     .small-12.columns.lessmargins.right_adjust
    -#       = link_to new_season_stake_path(@current_season) do
    -#         .front_button.text-center
    -#           = t(:become_a_stakeholder)



    = render 'cookies_eu/consent_banner'
    = render partial: 'shared/footer'
    :javascript
          $(document).ready(function() {
            $("#kp_headline").fitText(0.7);

            #{yield :jquery}
          });
